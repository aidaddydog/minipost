version: "3.9"
services:
  postgres:
    image: postgres:16-alpine
    container_name: ${COMPOSE_PROJECT_NAME:-minipost}-postgres
    environment:
      - POSTGRES_USER=${POSTGRES_USER:-minipost}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-ChangeMe123}
      - POSTGRES_DB=${POSTGRES_DB:-minipost}
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ../backups:/backups
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-minipost} -d ${POSTGRES_DB:-minipost}"]
      interval: 5s
      timeout: 5s
      retries: 30
    restart: unless-stopped

  web:
    build:
      context: ..
      dockerfile: docker/Dockerfile
    container_name: ${COMPOSE_PROJECT_NAME:-minipost}-web
    env_file:
      - ./.deploy.env
    ports:
      - "${APP_PORT:-8000}:8000"
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -fsS http://localhost:8000/healthz || exit 1"]
      interval: 10s
      timeout: 3s
      retries: 60
    restart: unless-stopped

volumes:
  pgdata:
