# 强制使用 PostgreSQL 16.x；web 由 deploy/Dockerfile 构建
# 说明：相对路径均以本 yml 所在目录（deploy/）为基准
services:
  postgres:
    image: postgres:16
    container_name: minipost_postgres
    environment:
      POSTGRES_USER: ${PG_USER:-minipost}
      POSTGRES_PASSWORD: ${PG_PASSWORD:-minipost}
      POSTGRES_DB: ${PG_DB:-minipost}
    volumes:
      - pg_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${PG_USER:-minipost} -d ${PG_DB:-minipost}"]
      interval: 5s
      timeout: 3s
      retries: 30
    restart: unless-stopped
    networks: [minipost_net]

  web:
    # 从仓库根构建（context: ..），Dockerfile 保持在 deploy/ 目录
    build:
      context: ..
      dockerfile: deploy/Dockerfile
    container_name: minipost_web
    depends_on:
      postgres:
        condition: service_healthy
    env_file:
      - ../.deploy.env
    environment:
      # 缺省兜底，部署脚本会合并 .deploy.env
      APP_HOST: "0.0.0.0"
      APP_PORT: "${APP_PORT:-8000}"
      DB: "postgres"
      PG_HOST: "postgres"
      PG_PORT: "5432"
    ports:
      - "${APP_PORT:-8000}:8000"
    healthcheck:
      test: ["CMD-SHELL", "python -c 'import socket; s=socket.socket(); s.settimeout(2); s.connect((\"127.0.0.1\",8000)); s.close()'"]
      interval: 5s
      timeout: 3s
      retries: 40
    restart: unless-stopped
    networks: [minipost_net]

volumes:
  pg_data:

networks:
  minipost_net:
    driver: bridge
