# deploy/docker-compose.yml
# 统一 Docker 编排（profiles: web, backend, postgres, editor）
# - backend 健康检查改为“端口监听”而非 /docs，避免卡住
# - 默认启用 RUN_MIGRATIONS=1（容器启动时自迁移），进一步降低等待风险

services:
  db:
    image: postgres:15
    container_name: minipost_db
    environment:
      POSTGRES_USER: minipost
      POSTGRES_PASSWORD: minipost
      POSTGRES_DB: minipost
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U minipost"]
      interval: 5s
      timeout: 3s
      retries: 20
    restart: unless-stopped
    profiles: ["postgres"]

  backend:
    build:
      context: ../backend
      dockerfile: Dockerfile
    image: minipost-backend
    container_name: minipost_backend
    depends_on:
      db:
        condition: service_healthy
    environment:
      DATABASE_URL: postgresql+asyncpg://minipost:minipost@db:5432/minipost
      APP_ENV: production
      APP_PORT: 8000
      JINJA_AUTO_RELOAD: "1"
      RUN_MIGRATIONS: "1"   # ← 启用容器内自迁移（entrypoint 会尝试 alembic upgrade）
    expose:
      - "8000"
    healthcheck:
      # 仅检测 8000 端口是否监听（不依赖具体路由），更快更稳
      test:
        [
          "CMD",
          "python",
          "-c",
          "import socket,sys; s=socket.socket(); s.settimeout(2); s.connect(('127.0.0.1',8000)); s.close()"
        ]
      interval: 5s
      timeout: 3s
      retries: 40
    restart: unless-stopped
    profiles: ["backend"]

  web:
    build:
      context: ../frontend
    image: minipost-web
    container_name: minipost_web
    depends_on:
      backend:
        condition: service_started
    ports:
      - "8000:80"
    restart: unless-stopped
    profiles: ["web"]

  editor:
    build:
      context: ../editor
      dockerfile: Dockerfile
    image: minipost-editor
    container_name: minipost_editor
    environment:
      ROOT_DIR: /workspace
      EDITOR_USER: ${EDITOR_USER:-daddy}
      EDITOR_PASS: ${EDITOR_PASS:-20240314AaA#}
      EDITOR_PORT: ${EDITOR_PORT:-6006}
    ports:
      - "${EDITOR_PORT:-6006}:6006"
    volumes:
      - ..:/workspace:rw
    restart: unless-stopped
    profiles: ["editor"]

volumes:
  db_data:
